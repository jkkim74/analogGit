<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skplanet.bisportal.repository.SalesRepository">
    <insert id="createSales" parameterType="Sales">
        INSERT INTO sales (product_id, user_id, amt, pay_date)
        VALUES (#{productId}, #{userId}, #{amt}, #{payDate})
    </insert>

    <select id="getSalesByProductId" parameterType="Long" resultType="Sales">
        SELECT product_id, user_id, amt, pay_date
        FROM   sales
        WHERE  product_id = #{productId}
    </select>

    <select id="getSalesSumAmtPerPaydateByPagination" parameterType="Map" resultType="Aggregation">
        select rnum, key, value, totalRecourdCount
        from (
            select rownum rnum, key, value, totalRecourdCount
            from (
            select COUNT(*) OVER() totalRecourdCount,
                   substr(pay_date, 0, 4)||'-'||substr(pay_date, 5, 2) as key,
                   sum(amt) as value
            from   sales
            where  pay_date &gt;= #{startDate}
            and    pay_date &lt;= #{endDate}
            group by substr(pay_date, 0, 4)||'-'||substr(pay_date, 5, 2)
            order by 2
            )
            where rownum &lt;= #{lastIndex}
        ) where rnum &gt; #{firstIndex}
    </select>

    <select id="getSumAmtByPaydate" parameterType="Map" resultType="Aggregation">
        select substr(pay_date, 0, 4)||'-'||substr(pay_date, 5, 2) as key,
               sum(amt) as value
        from   sales
        where  pay_date &gt;= #{startDate}
        and    pay_date &lt;= #{endDate}
        group by substr(pay_date, 0, 4)||'-'||substr(pay_date, 5, 2)
        order by 1
    </select>

    <select id="getSalesSumAmtPerSexByPaydate" parameterType="String" resultType="Aggregation">
        SELECT decode(u.sex, 'M', '남자', 'F', '여자') as key, sum(s.amt) as value
        FROM   SALES_USER u, sales s
        WHERE  u.id = s.user_id
        AND    s.pay_date like #{payDate}
        GROUP BY decode(u.sex, 'M', '남자', 'F', '여자')
    </select>

    <delete id="deleteSalesByProductId" parameterType="Long">
        DELETE FROM sales WHERE product_id = #{productId}
    </delete>
</mapper>
