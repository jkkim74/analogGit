<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skplanet.bisportal.repository.bip.HelpDeskRepository">

    <update id="increseHitCount" parameterType="HelpDeskRequest">
          UPDATE help_desk SET
              hit = hit + 1
          WHERE id = #{id}
    </update>

    <select id="getHelpDeskPrevNextItem" parameterType="HelpDeskRequest" resultType="HelpDesk">
        WITH t AS (
    <choose>
            <when test="navigator == 'previous'">
                SELECT MAX (id) newId
                  FROM help_desk
                 WHERE board_type = #{boardType}
                   AND id &lt; #{id}
            </when>
            <when test="navigator == 'next'">
                SELECT MIN (id) newId
                  FROM help_desk
                 WHERE board_type = #{boardType}
                   AND id &gt; #{id}
            </when>
    </choose>
    <choose>
        <when test="boardType == 'N'.toString()">
        </when>
        <when test="boardType == 'F'.toString()">
        </when>
        <when test="boardType == 'Q'.toString()">
            <if test="hdSearchCategory != null and hdSearchCategory != ''">
                   AND category in
                <foreach collection="hdSearchCategory" item="category" separator="," open="(" close=")">
                    #{category}
                </foreach>
            </if>
            <choose>
               <when test="hdSearchType == 'title'">
                   AND UPPER(help_desk.title) like UPPER('%'||#{hdSearchString}||'%')
               </when>
               <when test="hdSearchType == 'context'">
                   AND UPPER(REPLACE(help_desk.context,'br ','')) like UPPER('%'||#{hdSearchString}||'%')
               </when>
               <otherwise>
                   AND (UPPER(help_desk.title) like UPPER('%'||#{hdSearchString}||'%')
                        OR UPPER(REPLACE(help_desk.context,'br ','')) like UPPER('%'||#{hdSearchString}||'%'))
               </otherwise>
             </choose>
        </when>
        <when test="boardType == 'W'.toString()">
        </when>
        <otherwise>
        </otherwise>
    </choose>
        )
        SELECT id, board_type, category, title, context, password, hit, recommend_count, writer, write_date,
               write_ip, updater, update_date, update_ip, delete_yn, work_registrator, work_manager, work_status,
               work_registration_date, work_complete_date, writer_id, updater_id, reply_completion_yn
        FROM help_desk, t
        WHERE id = t.newId
    <choose>
            <when test="boardType == 'N'.toString()">
            </when>
            <when test="boardType == 'F'.toString()">
            </when>
            <when test="boardType == 'Q'.toString()">
                <if test="hdSearchCategory != null and hdSearchCategory != ''">
                       AND category in
                    <foreach collection="hdSearchCategory" item="category" separator="," open="(" close=")">
                        #{category}
                    </foreach>
                </if>
                <choose>
                   <when test="hdSearchType == 'title'">
                       AND UPPER(help_desk.title) like UPPER('%'||#{hdSearchString}||'%')
                   </when>
                   <when test="hdSearchType == 'context'">
                       AND UPPER(REPLACE(help_desk.context,'br ','')) like UPPER('%'||#{hdSearchString}||'%')
                   </when>
                   <otherwise>
                       AND (UPPER(help_desk.title) like UPPER('%'||#{hdSearchString}||'%')
                            OR UPPER(REPLACE(help_desk.context,'br ','')) like UPPER('%'||#{hdSearchString}||'%'))
                   </otherwise>
                 </choose>
            </when>
            <when test="boardType == 'W'.toString()">
            </when>
            <otherwise>
            </otherwise>
    </choose>
    </select>
    <update id="deleteHelpDeskSelection" parameterType="HelpDesk">
        UPDATE help_desk SET
            updater = #{updater},
            updater_id = #{updaterId},
            update_date = to_char(sysdate,'YYYYMMDDHH24MISS'),
            update_ip = #{updateIp},
            delete_yn = 'Y'
        WHERE id = #{id}
    </update>

    <select id="getMainPageNotice" resultType="HelpDesk">
        with t as (
      	      SELECT id, category, title, context, hit, writer, writer_id,
                     TO_CHAR (TO_DATE (SUBSTR (write_date, 0, 8)), 'yyyy.mm.dd') write_date,
                     CASE
                        WHEN (TRUNC (SYSDATE) - TRUNC (TO_DATE (SUBSTR (write_date, 0, 8)))) > 7
                        THEN 'N'
                        ELSE 'Y'
                     END AS new_yn,
                     popup_start_date, popup_end_date, popup_yn
              FROM  help_desk
              WHERE board_type = 'N'
              AND   delete_yn = 'N'
              AND category = 'important'
              AND popup_start_date <![CDATA[<=]]> to_char(sysdate,'yyyymmdd')
              AND popup_end_date <![CDATA[>=]]> to_char(sysdate,'yyyymmdd')
              ORDER BY write_date desc
        )
        SELECT id, category, title, context, hit, writer, writer_id, write_date, new_yn, popup_start_date, popup_end_date, popup_yn
        FROM t
        WHERE rownum = 1
    </select>

    <select id="getLastMainPageNotice" resultType="HelpDesk">
	    SELECT id, board_type, category, title, context, password, hit, recommend_count, writer, write_date,
               write_ip, updater, update_date, update_ip, delete_yn, work_registrator, work_manager, work_status,
               work_registration_date, work_complete_date, writer_id, updater_id, reply_completion_yn,
               popup_start_date, popup_end_date, popup_yn
	    FROM  help_desk
		WHERE board_type = 'N'
		AND   delete_yn = 'N'
		AND   category = 'important'
		AND   popup_end_date = '99991231'
    </select>

    <select id="getHelpDeskNoticeList" parameterType="HelpDeskRequest" resultType="HelpDesk">
        SELECT id, category, title, context, hit, writer, writer_id, TO_CHAR (TO_DATE (SUBSTR (write_date, 0, 8)), 'yyyy.mm.dd') write_date,
                CASE
                   WHEN (TRUNC (SYSDATE) - TRUNC (TO_DATE (SUBSTR (write_date, 0, 8)))) > 7
                   THEN 'N'
                   ELSE 'Y'
                END AS new_yn,
                popup_start_date, popup_end_date, popup_yn
        FROM (
            SELECT a.id, a.board_type, a.category, a.title, a.context, a.hit, a.writer, a.writer_id, a.write_date, a.write_ip, a.updater, a.updater_id, a.update_date,
                   a.update_ip, a.delete_yn, a.popup_start_date, a.popup_end_date, a.popup_yn, a.popup_order,
                ROWNUM rnum,
                FLOOR((ROWNUM - 1) / #{pageSize} + 1) AS PAGE
            FROM (
                SELECT a.id, a.board_type, a.category, a.title, a.context, a.hit, a.writer, a.writer_id, a.write_date, a.write_ip, a.updater, a.updater_id, a.update_date,
                       a.update_ip, a.delete_yn, a.popup_start_date, a.popup_end_date, a.popup_yn, a.popup_order
                FROM  help_desk a
                WHERE board_type = 'N'
                AND   delete_yn = 'N'
--                 AND to_char(sysdate,'yyyymmdd') between POPUP_START_DATE and POPUP_END_DATE
                <if test="hdSearchCategorySingle != null and hdSearchCategorySingle != ''">
                       AND category = #{hdSearchCategorySingle}
                </if>
                <choose>
                        <when test="hdSearchType == 'title'">
                            AND UPPER(title) like UPPER('%'||#{hdSearchString}||'%')
                        </when>
                        <when test="hdSearchType == 'context'">
                            AND UPPER(REPLACE(context,'br ','')) like UPPER('%'||#{hdSearchString}||'%')
                        </when>
                        <otherwise>
                            AND (UPPER(title) like UPPER('%'||#{hdSearchString}||'%')
                             OR UPPER(REPLACE(context,'br ','')) like UPPER('%'||#{hdSearchString}||'%'))
                        </otherwise>
                </choose>
                ORDER BY id DESC
                ) a
            ) a
        WHERE a.PAGE = #{page} OR a.rnum = ${page} * ${pageSize} + 1
    </select>
    <insert id="insertHelpDeskNotice" parameterType="HelpDesk">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT help_desk_seq.nextval FROM dual
        </selectKey>
        INSERT INTO help_desk (
            id, board_type, category, title, context, hit, writer, writer_id, write_date, write_ip, updater, updater_id, update_date, update_ip,
            delete_yn, popup_start_date, popup_end_date, popup_yn)
        VALUES (
            #{id}, 'N', #{category}, #{title}, #{context}, 0, #{writer}, #{writerId}, to_char(sysdate,'YYYYMMDDHH24MISS'),
            #{writeIp}, #{writer}, #{writerId}, to_char(sysdate,'YYYYMMDDHH24MISS'), #{writeIp}, 'N', #{popupStartDate}, #{popupEndDate}, #{popupYn})
    </insert>
    <update id="updateHelpDeskNotice" parameterType="HelpDesk">
        UPDATE help_desk SET
            category = #{category},
            title = #{title},
            context = #{context},
            updater = #{updater},
            updater_id = #{updaterId},
            update_date = to_char(sysdate,'YYYYMMDDHH24MISS'),
            update_ip = #{updateIp},
            popup_start_date = #{popupStartDate},
            popup_end_date = #{popupEndDate},
            popup_yn = #{popupYn}
        WHERE id = #{id}
    </update>
     <update id="updateLastMainPageNotice" parameterType="HelpDesk">
        UPDATE help_desk SET
            update_date = to_char(sysdate,'YYYYMMDDHH24MISS'),
            popup_end_date = to_char(to_date(#{popupStartDate},'YYYYMMDD') - 1, 'YYYYMMDD')
        WHERE id = #{id}
    </update>

    <select id="getHelpDeskFaqList" parameterType="HelpDeskRequest" resultType="HelpDesk">
        SELECT id, title, context, hit, writer, writer_id, TO_CHAR (TO_DATE (SUBSTR (write_date, 0, 8)), 'yyyy.mm.dd') write_date,
                CASE
                   WHEN (TRUNC (SYSDATE) - TRUNC (TO_DATE (SUBSTR (write_date, 0, 8)))) > 7
                   THEN 'N'
                   ELSE 'Y'
                END AS new_yn
        FROM (
            SELECT a.id, a.board_type, a.category, a.title, a.context, a.hit, a.writer, a.writer_id, a.write_date, a.write_ip, a.updater, a.updater_id, a.update_date,
                   a.update_ip, a.delete_yn, a.popup_start_date, a.popup_end_date, a.popup_yn, a.popup_order,
                   ROWNUM rnum, FLOOR((ROWNUM - 1) / #{pageSize} + 1) AS PAGE
            FROM (
                SELECT a.id, a.board_type, a.category, a.title, a.context, a.hit, a.writer, a.writer_id, a.write_date, a.write_ip, a.updater, a.updater_id, a.update_date,
                       a.update_ip, a.delete_yn, a.popup_start_date, a.popup_end_date, a.popup_yn, a.popup_order
                FROM  help_desk a
                WHERE board_type = 'F'
                AND   delete_yn = 'N'
                <choose>
                        <when test="hdSearchType == 'title'">
                            AND UPPER(title) like UPPER('%'||#{hdSearchString}||'%')
                        </when>
                        <when test="hdSearchType == 'context'">
                            AND UPPER(REPLACE(context,'br ','')) like UPPER('%'||#{hdSearchString}||'%')
                        </when>
                        <otherwise>
                            AND (UPPER(title) like UPPER('%'||#{hdSearchString}||'%')
                             OR UPPER(REPLACE(context,'br ','')) like UPPER('%'||#{hdSearchString}||'%'))
                        </otherwise>
                </choose>
                ORDER BY id DESC
                ) a
            ) a
        WHERE
            a.PAGE = #{page}
            OR a.rnum = ${page} * ${pageSize} + 1
    </select>
    <insert id="insertHelpDeskFaq" parameterType="HelpDesk">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT help_desk_seq.nextval FROM dual
        </selectKey>
        INSERT INTO help_desk (
            id, board_type, title, context, hit, writer, writer_id, write_date, write_ip, updater, updater_id, update_date, update_ip, delete_yn)
        VALUES (
            #{id}, 'F', #{title}, #{context}, 0, #{writer}, #{writerId}, to_char(sysdate,'YYYYMMDDHH24MISS'), #{writeIp},
            #{writer}, #{writerId}, to_char(sysdate,'YYYYMMDDHH24MISS'), #{writeIp}, 'N')
    </insert>
    <update id="updateHelpDeskFaq" parameterType="HelpDesk">
        UPDATE help_desk SET
            title = #{title},
            context = #{context},
            updater = #{updater},
            updater_id = #{updaterId},
            update_date = to_char(sysdate,'YYYYMMDDHH24MISS'),
            update_ip = #{updateIp}
        WHERE id = #{id}
    </update>


    <select id="getHelpDeskQnaCount" parameterType="HelpDeskRequest" resultType="HelpDesk">
        SELECT COUNT (*) totalRecourdCount
        FROM  help_desk
        WHERE board_type = 'Q'
        AND   delete_yn = 'N'
    <if test="hdSearchCategory != null and hdSearchCategory != ''">
           AND category in (
        <foreach collection="hdSearchCategory" item="category" separator=",">
            #{category}
        </foreach>
                )
    </if>
    <choose>
       <when test="hdSearchType == 'title'">
           AND UPPER(title) like UPPER('%'||#{hdSearchString, jdbcType=VARCHAR}||'%')
       </when>
       <when test="hdSearchType == 'context'">
           AND UPPER(REPLACE(context,'br ','')) like UPPER('%'||#{hdSearchString, jdbcType=VARCHAR}||'%')
       </when>
       <otherwise>
           AND (UPPER(title) like UPPER('%'||#{hdSearchString, jdbcType=VARCHAR}||'%')
                OR UPPER(REPLACE(context,'br ','')) like UPPER('%'||#{hdSearchString, jdbcType=VARCHAR}||'%'))
       </otherwise>
    </choose>
    </select>
    <select id="getHelpDeskQnaList" parameterType="HelpDeskRequest" resultType="HelpDesk">
      WITH t AS (  SELECT id, COUNT (*) reply_count
                     FROM help_desk_reply
                    WHERE delete_yn = 'N'
                 GROUP BY id)
          SELECT rnum, totalRecourdcount, id, category, title, context, hit, writer, writer_id, write_date, reply_completion_yn, reply_count
          FROM (
              SELECT ROWNUM rnum, totalRecourdcount, id, category, title, context, hit, writer, writer_id, write_date, reply_completion_yn, reply_count
              FROM (
                  SELECT COUNT (*) OVER () totalRecourdCount,
                         help_desk.id AS id, help_desk.category AS category, help_desk.title AS title,
                         help_desk.context AS context, help_desk.hit AS hit, help_desk.writer AS writer,
                         help_desk.writer_id AS writer_id, TO_CHAR (TO_DATE (SUBSTR (help_desk.write_date, 0, 8)),'yyyy.mm.dd') AS write_date,
                         help_desk.reply_completion_yn AS reply_completion_yn, NVL (t.reply_count, 0) AS reply_count
                  FROM help_desk, t
                  WHERE help_desk.board_type = 'Q'
                  AND help_desk.delete_yn = 'N'
                  AND help_desk.id = t.id(+)
                    <if test="hdSearchCategory != null and hdSearchCategory != ''">
                           AND category in (
                        <foreach collection="hdSearchCategory" item="category" separator=",">
                            #{category}
                        </foreach>
                                )
                    </if>
                    <choose>
                       <when test="hdSearchType == 'title'">
                           AND UPPER(help_desk.title) like UPPER('%'||#{hdSearchString}||'%')
                       </when>
                       <when test="hdSearchType == 'context'">
                           AND UPPER(REPLACE(help_desk.context,'br ','')) like UPPER('%'||#{hdSearchString}||'%')
                       </when>
                       <otherwise>
                           AND (UPPER(help_desk.title) like UPPER('%'||#{hdSearchString}||'%')
                                OR UPPER(REPLACE(help_desk.context,'br ','')) like UPPER('%'||#{hdSearchString}||'%'))
                       </otherwise>
                     </choose>
                      ORDER BY id ASC))
           WHERE rnum BETWEEN #{startIndex} AND #{endIndex}
        ORDER BY rnum DESC
    </select>
    <insert id="insertHelpDeskQna" parameterType="HelpDesk">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT help_desk_seq.nextval FROM dual
        </selectKey>
        INSERT INTO help_desk (
            id, board_type, category, title, context, hit, writer, writer_id, write_date, write_ip,
            updater, updater_id, update_date, update_ip, delete_yn, reply_completion_yn)
        VALUES (
            #{id}, 'Q', #{category}, #{title}, #{context}, 0, #{writer}, #{writerId}, to_char(sysdate,'YYYYMMDDHH24MISS'),
            #{writeIp}, #{writer}, #{writerId}, to_char(sysdate,'YYYYMMDDHH24MISS'), #{writeIp},'N', 'N')
    </insert>
    <update id="updateHelpDeskQna" parameterType="HelpDesk">
        UPDATE help_desk SET
            category = #{category},
            title = #{title},
            context = #{context},
            updater = #{updater},
            updater_id = #{updaterId},
            update_date = to_char(sysdate,'YYYYMMDDHH24MISS'),
            update_ip = #{updateIp}
        WHERE id = #{id}
    </update>
    <update id="updateHelpDeskQnaReplyCompletion" parameterType="HelpDesk">
        UPDATE help_desk SET
            reply_completion_yn = 'Y'
        WHERE id = #{id}
    </update>



    <select id="getHelpDeskWorkRequestListCount" parameterType="HelpDeskRequest" resultType="HelpDesk">
        SELECT COUNT (*) totalRecourdCount
          FROM help_desk
         WHERE board_type = 'W'
           AND delete_yn = 'N'
                   --작업요청 추가 조회조건 넣기
    </select>
    <select id="getHelpDeskWorkRequestList" parameterType="HelpDeskRequest" resultType="HelpDesk">
          SELECT rnum, totalRecourdcount, id, title, writer, write_date, work_registrator, work_manager, work_status, work_registration_date, work_complete_date, writer_id
          FROM (
              SELECT ROWNUM rnum, totalRecourdcount, id, title, writer, write_date, work_registrator, work_manager, work_status, work_registration_date, work_complete_date, writer_id
              FROM (
                  SELECT COUNT (*) OVER () totalRecourdCount, id, title, writer, TO_CHAR (TO_DATE (SUBSTR (write_date, 0, 8)), 'yyyy.mm.dd') write_date,
                          work_registrator, work_manager, work_status,
                          TO_CHAR (TO_DATE (work_registration_date), 'yyyy.mm.dd') work_registration_date,
                          TO_CHAR (TO_DATE (work_complete_date), 'yyyy.mm.dd') work_complete_date, writer_id
                  FROM help_desk
                  WHERE board_type = 'W'
                  AND delete_yn = 'N'
                  --검색어, 분류 조건 필요
                  ORDER BY id ASC))
              WHERE rnum BETWEEN #{startIndex} AND #{endIndex}
          ORDER BY rnum DESC
    </select>


    <select id="getHelpDeskWorkRequestApprovalPerson" parameterType="String" resultType="JiraApiRequest">
        WITH T
             AS (SELECT ORG_CD
                   FROM COM_PERSON
                  WHERE LOGIN_ID = #{searchId})
        SELECT CP.LOGIN_ID AS LOGIN_ID,
               CP.USER_NM AS USER_NM,
               CP.JBCHARGE AS JBCHARGE,
               CP.ORG_CD AS ORG_CD,
               CP.SOSOK AS SOSOK
          FROM COM_PERSON CP, T
         WHERE CP.ORG_CD = T.ORG_CD
		   AND CP.JBCHARGE in ('301', '302')
    </select>

    <select id="getHelpDeskWorkRequestReferencePersons" parameterType="String" resultType="JiraApiRequest">
        SELECT LOGIN_ID AS id,
               USER_NM ||'('||SOSOK||')' AS name
          FROM COM_PERSON
         WHERE UPPER(USER_NM) like UPPER('%'||#{searchName}||'%')
    </select>

    <select id="getPopupList" resultType="HelpDesk">
        WITH t AS (
            SELECT id, decode(category, 'emergency', '긴급공지', 'important', '주요공지','알림공지') as category,
                   title, context,
                   TO_CHAR (TO_DATE (SUBSTR (write_date, 0, 8)),'yyyy.mm.dd') AS write_date,
                   TO_CHAR (TO_DATE (popup_start_date),'yyyy.mm.dd') AS popup_start_date,
                   TO_CHAR (TO_DATE (popup_end_date),'yyyy.mm.dd') AS popup_end_date,
                   popup_yn, popup_order
              FROM help_desk
             WHERE board_type = 'N'
               AND delete_yn = 'N'
			   AND popup_yn = 'Y'
			   AND category != 'important'
          ORDER BY category, popup_start_date desc
        ),
        t2 AS (
            SELECT id,
                   decode(category, 'emergency', '긴급공지', 'important', '주요공지','알림공지') as category,
                   title,
                   context,
                   TO_CHAR (TO_DATE (SUBSTR (write_date, 0, 8)),'yyyy.mm.dd') AS write_date,
                   TO_CHAR (TO_DATE (popup_start_date),'yyyy.mm.dd') AS popup_start_date,
                   TO_CHAR (TO_DATE (popup_end_date),'yyyy.mm.dd') AS popup_end_date,
                   popup_yn,
                   popup_order
              FROM help_desk
             WHERE board_type = 'N'
               AND delete_yn = 'N'
			   AND popup_yn != 'Y'
          ORDER BY id desc
        ),
		t3 AS (
			SELECT id, category, title, context, write_date, popup_start_date, popup_end_date, popup_yn, popup_order
			FROM   t
			UNION ALL
			SELECT id, category, title, context, write_date, popup_start_date, popup_end_date, popup_yn, popup_order
			FROM   t2
		)
    	SELECT rownum rnum, id, category, title, context, write_date, popup_start_date, popup_end_date, popup_yn, popup_order
    	FROM   t3
    </select>

    <select id="getPopupYList" resultType="HelpDesk">
       SELECT id,
               category as category,
               decode(category, 'emergency', '긴급공지', 'important', '주요공지','알림공지') as category_name,
               title,
               context,
               TO_CHAR (TO_DATE (SUBSTR (write_date, 0, 8)),'yyyy.mm.dd') AS write_date,
               TO_CHAR (TO_DATE (popup_start_date),'yyyy.mm.dd') AS popup_start_date,
               TO_CHAR (TO_DATE (popup_end_date),'yyyy.mm.dd') AS popup_end_date,
               popup_order
          FROM help_desk
         WHERE board_type = 'N'
           AND delete_yn = 'N'
           AND popup_yn = 'Y'
           AND category != 'important'
		   AND popup_start_date <![CDATA[<=]]> to_char(sysdate,'yyyymmdd')
		   AND popup_end_date <![CDATA[>=]]> to_char(sysdate,'yyyymmdd')
      ORDER BY category, popup_start_date desc
    </select>

    <select id="getSelectedPopupInfo" parameterType="String"  resultType="HelpDesk">
        SELECT id, category, title, context, hit, writer, writer_id,
               TO_CHAR (TO_DATE (SUBSTR (write_date, 0, 8)),'yyyy.mm.dd') AS write_date,
               TO_CHAR (TO_DATE (popup_start_date),'yyyy.mm.dd') AS popup_start_date,
               TO_CHAR (TO_DATE (popup_end_date),'yyyy.mm.dd') AS popup_end_date,
               popup_yn, popup_order
          FROM help_desk
         WHERE id = #{id}
    </select>

    <insert id="insertPopupNotice" parameterType="HelpDesk">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT help_desk_seq.nextval FROM dual
        </selectKey>
        INSERT INTO help_desk (
            id, board_type, category, title, context, hit, writer, writer_id, write_date, write_ip, updater, updater_id, update_date,
            update_ip, delete_yn, popup_start_date, popup_end_date, popup_yn, popup_order)
        VALUES (
            #{id}, 'N', #{category}, #{title}, #{context}, 0, #{writer}, #{writerId}, to_char(sysdate,'YYYYMMDDHH24MISS'),
            #{writeIp}, #{writer}, #{writerId}, to_char(sysdate,'YYYYMMDDHH24MISS'), #{writeIp}, 'N', #{popupStartDate},
            #{popupEndDate}, #{popupYn}, #{popupOrder, jdbcType=INTEGER} )
    </insert>
    <update id="updatePopupNotice" parameterType="HelpDesk">
        UPDATE help_desk SET
            category = #{category},
            title = #{title},
            context = #{context},
            updater = #{updater},
            updater_id = #{updaterId},
            update_date = to_char(sysdate,'YYYYMMDDHH24MISS'),
            update_ip = #{updateIp},
            popup_start_date = #{popupStartDate},
            popup_end_date = #{popupEndDate},
            popup_yn = #{popupYn},
            popup_order = #{popupOrder, jdbcType=INTEGER}
        WHERE id = #{id}
    </update>
    <update id="quickClosePopup" parameterType="HelpDesk">
        UPDATE help_desk SET
            updater = #{updater},
            updater_id = #{updaterId},
            update_date = to_char(sysdate,'YYYYMMDDHH24MISS'),
            update_ip = #{updateIp},
            popup_yn = 'N',
            popup_order = ''
        WHERE id = #{id}
    </update>
</mapper>
