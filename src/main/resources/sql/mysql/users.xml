<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skplanet.web.repository.mysql.UserRepository">

	<resultMap type="UserInfo" id="UserInfoResultMap">
		<id property="username" column="USERNAME" javaType="string" />
		<result property="enabled" column="ENABLED" javaType="_boolean" />
		<result property="ptsUsername" column="PTS_USERNAME" javaType="string" />
		<result property="beginDttm" column="BEGIN_DTTM" javaType="string" />
		<result property="endDttm" column="END_DTTM" javaType="string" />
		<result property="menuList" column="MENU_LIST" javaType="string" />
		<collection property="authorities" ofType="org.springframework.security.core.authority.SimpleGrantedAuthority">
			<constructor>
				<arg column="AUTHORITY" javaType="string" />
			</constructor>
		</collection>
	</resultMap>

	<select id="selectUsers" parameterType="map" resultMap="UserInfoResultMap">
		<choose>
			<when test="onlyUsername == true">
				SELECT USERNAME, NULL AS AUTHORITY FROM USERS
			</when>
			<otherwise>
				SELECT *
				FROM (
					SELECT A.*, IFNULL(GROUP_CONCAT(B.MENU_ID), '') AS MENU_LIST
					FROM USERS A
					LEFT OUTER JOIN MENU_ACCESS B ON A.USERNAME = B.USERNAME
					GROUP BY A.USERNAME
					<if test="username != null and username != ''">
						HAVING A.USERNAME = #{username}
					</if>
				) U
				NATURAL JOIN AUTHORITIES
			</otherwise>
		</choose>
	</select>

	<update id="upsertUser" parameterType="map">
		INSERT
		INTO USERS ( USERNAME, ENABLED, BEGIN_DTTM, CREATE_DTTM )
		VALUES ( #{username}, 1, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'), DATE_FORMAT(NOW(),'%Y%m%d%H%i%s') )
		ON DUPLICATE KEY
		<trim prefix="UPDATE" suffixOverrides=",">
			<if test="username != null and username != ''">USERNAME = #{username},</if>
			<if test="ptsUsername != null and ptsUsername != ''">PTS_USERNAME = #{ptsUsername},</if>
			<if test="ptsUsername != null and ptsUsername == ''">PTS_USERNAME = NULL,</if>
			<if test="enabled != null and enabled != ''">ENABLED = IF('true' = #{enabled}, 1, 0),</if>
			<if test="enabled != null and enabled == 'true'">BEGIN_DTTM = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'), END_DTTM = NULL,</if>
			<if test="enabled != null and enabled == 'false'">END_DTTM = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'),</if>
		</trim>
	</update>
	<update id="upsertUser" parameterType="map" databaseId="hsql">
		INSERT
		INTO USERS ( USERNAME, ENABLED, BEGIN_DTTM, CREATE_DTTM )
		VALUES ( #{username}, 1, TO_CHAR(NOW(),'YYYYMMDDHH24MISS'), TO_CHAR(NOW(),'YYYYMMDDHH24MISS') )
		ON DUPLICATE KEY
		<trim prefix="UPDATE" suffixOverrides=",">
			<if test="username != null and username != ''">USERNAME = #{username},</if>
			<if test="ptsUsername != null and ptsUsername != ''">PTS_USERNAME = #{ptsUsername},</if>
			<if test="ptsUsername != null and ptsUsername == ''">PTS_USERNAME = NULL,</if>
			<if test="enabled != null and enabled != ''">ENABLED = #{enabled},</if>
			<if test="enabled != null and enabled == 'true'">BEGIN_DTTM = TO_CHAR(NOW(),'YYYYMMDDHH24MISS'), END_DTTM = NULL,</if>
			<if test="enabled != null and enabled == 'false'">END_DTTM = TO_CHAR(NOW(),'YYYYMMDDHH24MISS'),</if>
		</trim>
	</update>

	<insert id="insertAuthorities" parameterType="map">
		INSERT INTO AUTHORITIES (USERNAME, AUTHORITY)
		VALUES
		<foreach collection="authorities.split(',')" item="item" separator=",">
			( #{username}, #{item} )
		</foreach>
	</insert>

	<delete id="deleteAuthorities" parameterType="map">
		DELETE FROM AUTHORITIES
		WHERE USERNAME = #{username}
		AND AUTHORITY IN
		<foreach collection="authorities.split(',')" item="item" separator="," open="(" close=")">
			#{item}
		</foreach> 
	</delete>

	<insert id="insertAccesses" parameterType="map">
		INSERT INTO MENU_ACCESS (USERNAME, MENU_ID)
		VALUES
		<foreach collection="menuList.split(',')" item="item" separator=",">
			( #{username}, UPPER(#{item}) )
		</foreach>
	</insert>

	<delete id="deleteAccesses" parameterType="map">
		DELETE FROM MENU_ACCESS
		WHERE USERNAME = #{username}
		AND MENU_ID IN
		<foreach collection="menuList.split(',')" item="item" separator="," open="(" close=")">
			UPPER(#{item})
		</foreach>
	</delete>

</mapper>
